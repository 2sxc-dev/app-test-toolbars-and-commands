<h1 class="sc-element">Demo JS injected toolbars
    @Edit.Toolbar(Content, settings: new { show = "always" })
</h1>
<em>
  ATM this doesn't seem to work 2022-03-03. 
</em>

<div class="sc-element">
    mouse over this to see inline-json version (this is still without additional JS)
    <ul class="sc-menu" toolbar='[{
            "command": { 
                "action": "new",
                "contentType": "Quotes"
            },
            "title": "create Quote"
        }, {
            "command": { 
                "action": "new",
                "contentType": "Dummy"
            },
            "title": "create Dummy item"
    }]'></ul>
</div>

<hr>



<div class="sc-element">
    mouse over this to see the js toolbar generated by the buttons-list
    <toolbars2Buttons></toolbars2Buttons>
</div>

<script>
    var toolbars2Buttons =  [{
            command: { 
                action: "new",
                contentType: "Category"
            },
            title: "create Category"
        }, {
            command: { 
                action: "new",
                contentType: "Author"
            },
            title: "create Author"
    }];
    
    // note that we cannot create the toolbars before the page-onready. Because of this
    // our code which creates the toolbar must be delayed, like in a $(our-code);
    $(function(){
        if(typeof $2sxc != "undefined")   // continue if $2sxc exists; it may be missing in non-edit modes
            $("toolbars2Buttons").each(function(index, element){
                var controller = $2sxc(element);
                if(!controller.isEditMode())    // check if this specific module currently allows editing
                    return;
                    
                var toolbar = controller.manage.getToolbar(toolbars2Buttons);
                $(element).replaceWith(toolbar);
            });
    });
</script>

<div class="sc-element">
    mouse over this to see the js toolbar generated by the GROUP of buttons
    <toolbars1Group></toolbars1Group>
</div>
<br>

<div class="sc-element">
    mouse over this to see the js toolbar generated by the GROUPS of buttons
    <toolbarsGroups></toolbarsGroups>
</div>
<br>
<script>
    var toolbarsGroups = {
        groups: [ 
            { buttons: "layout,more"}, 
            { buttons: "app,zone,more" } 
        ]
    };
        
    $(function(){
        if(typeof $2sxc != "undefined")   // continue if $2sxc exists; it may be missing in non-edit modes
            $("toolbarsGroups").each(function(index, element){
                var controller = $2sxc(element);
                if(!controller.isEditMode())    // check if this specific module currently allows editing
                    return;
    
                var toolbar = controller.manage.getToolbar(toolbarsGroups);
                $(element).replaceWith(toolbar);
            });
    });
</script>



    <toolbarDemo type="simple"></toolbarDemo>


After the toolbar...




<script>
        
    var toolbars1Group = {
                buttons:  [{
                command: { 
                    action: "new",
                    contentType: "Category"
                },
                title: "create Category"
            }, {
                command: { 
                    action: "new",
                    contentType: "Author"
                },
                title: "create Author"
        }],
                defaults: {
                    classes: "xyz"
                }
        };
        


    
    $(function(){
        if(typeof $2sxc != "undefined")   // continue if $2sxc exists; it may be missing in non-edit modes
            $("toolbars1Group").each(function(index, element){
                var controller = $2sxc(element);
                if(!controller.isEditMode())    // check if this specific module currently allows editing
                    return;
    
                var toolbar = controller.manage.getToolbar(toolbars1Group);
                $(element).replaceWith(toolbar);
            });
    });


        
    $(function(){
        // grab all the toolbars on this page, and do something with them
        $("toolbarDemo").each(function(index, element){
            var $el = $(element);
            var type = $el.attr("type");
            
            switch(type){
                case "simple":
                    $el.html("hello!");
            }
            
        });
    });
    
</script>

